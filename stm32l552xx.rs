const PERIPH_BASE_NS : u32 = 0x40000000; // Peripheral non secure base address
const PERIPH_BASE_S : u32 = 0x50000000; // Peripheral secure base address 

/* Peripheral memory map - Non secure */
//1351
const APB1PERIPH_BASE_NS : u32 = PERIPH_BASE_NS;
const APB2PERIPH_BASE_NS : u32 = PERIPH_BASE_NS + 0x00010000;
const AHB1PERIPH_BASE_NS : u32 = PERIPH_BASE_NS + 0x00020000;
const AHB2PERIPH_BASE_NS : u32 = PERIPH_BASE_NS + 0x02020000;
const AHB3PERIPH_BASE_NS : u32 = PERIPH_BASE_NS + 0x04020000;

/* Peripheral memory map - Secure */
// //1517
// const APB1PERIPH_BASE_S : u32 = PERIPH_BASE_S;
// const APB2PERIPH_BASE_S : u32 = PERIPH_BASE_S + 0x00010000;
// const AHB1PERIPH_BASE_S : u32 = PERIPH_BASE_S + 0x00020000;
// const AHB2PERIPH_BASE_S : u32 = PERIPH_BASE_S + 0x02020000;
// const AHB3PERIPH_BASE_S : u32 = PERIPH_BASE_S + 0x04020000;

// AHB2 Non secure peripherals 
//1483
const GPIOA_BASE_NS: u32 = AHB2PERIPH_BASE_NS + 0x0000;
const GPIOB_BASE_NS: u32 = AHB2PERIPH_BASE_NS + 0x0400;
const GPIOC_BASE_NS: u32 = AHB2PERIPH_BASE_NS + 0x0800;
const GPIOD_BASE_NS: u32 = AHB2PERIPH_BASE_NS + 0x0C00;
const GPIOE_BASE_NS: u32 = AHB2PERIPH_BASE_NS + 0x1000;
const GPIOF_BASE_NS: u32 = AHB2PERIPH_BASE_NS + 0x1400;
const GPIOG_BASE_NS: u32 = AHB2PERIPH_BASE_NS + 0x1800;
const GPIOH_BASE_NS: u32 = AHB2PERIPH_BASE_NS + 0x1C00;


// AHB2 Secure peripherals
//1649
// const GPIOA_BASE_S: u32 = AHB2PERIPH_BASE_S + 0x0000;
// const GPIOB_BASE_S: u32 = AHB2PERIPH_BASE_S + 0x0400;
// const GPIOC_BASE_S: u32 = AHB2PERIPH_BASE_S + 0x0800;
// const GPIOD_BASE_S: u32 = AHB2PERIPH_BASE_S + 0x0C00;
// const GPIOE_BASE_S: u32 = AHB2PERIPH_BASE_S + 0x1000;
// const GPIOF_BASE_S: u32 = AHB2PERIPH_BASE_S + 0x1400;
// const GPIOG_BASE_S: u32 = AHB2PERIPH_BASE_S + 0x1800;
// const GPIOH_BASE_S: u32 = AHB2PERIPH_BASE_S + 0x1C00;

pub struct GPIO_TypeDef{
    pub MODER : u32,  //GPIO port mode register
    pub OTYPER : u32,  //GPIO port output type register
    pub OSPEEDR : u32,  //GPIO port output speed register
    pub ODR : u32,  //GPIO port output data register
    pub PUPDR : u32,  // GPIO port pull-up/pull-down register
    pub IDR : u32,  //GPIO port input data register
    pub RESERVED : u32,  //Reserved
    pub BRR : u32,  //GPIO Bit Reset register
    pub BSRR : u32,  //GPIO port bit set/reset  register
}

//Peripheral declaration

// AHB2 Non secure peripherals
//1894
const GPIOA_NS: *mut GPIO_TypeDef = GPIOA_BASE_NS as *mut GPIO_TypeDef;
const GPIOB_NS: *mut GPIO_TypeDef = GPIOB_BASE_NS as *mut GPIO_TypeDef;
const GPIOC_NS: *mut GPIO_TypeDef = GPIOC_BASE_NS as *mut GPIO_TypeDef;
const GPIOD_NS: *mut GPIO_TypeDef = GPIOD_BASE_NS as *mut GPIO_TypeDef;
const GPIOE_NS: *mut GPIO_TypeDef = GPIOE_BASE_NS as *mut GPIO_TypeDef;
const GPIOF_NS: *mut GPIO_TypeDef = GPIOF_BASE_NS as *mut GPIO_TypeDef;
const GPIOG_NS: *mut GPIO_TypeDef = GPIOG_BASE_NS as *mut GPIO_TypeDef;
const GPIOH_NS: *mut GPIO_TypeDef = GPIOH_BASE_NS as *mut GPIO_TypeDef;

// AHB2 Secure peripherals 
//2042
// const GPIOA_S: *mut GPIO_TypeDef = GPIOA_BASE_S as *mut GPIO_TypeDef;
// const GPIOB_S: *mut GPIO_TypeDef = GPIOB_BASE_S as *mut GPIO_TypeDef;
// const GPIOC_S: *mut GPIO_TypeDef = GPIOC_BASE_S as *mut GPIO_TypeDef;
// const GPIOD_S: *mut GPIO_TypeDef = GPIOD_BASE_S as *mut GPIO_TypeDef;
// const GPIOE_S: *mut GPIO_TypeDef = GPIOE_BASE_S as *mut GPIO_TypeDef;
// const GPIOF_S: *mut GPIO_TypeDef = GPIOF_BASE_S as *mut GPIO_TypeDef;
// const GPIOG_S: *mut GPIO_TypeDef = GPIOG_BASE_S as *mut GPIO_TypeDef;
// const GPIOH_S: *mut GPIO_TypeDef = GPIOH_BASE_S as *mut GPIO_TypeDef;

// Instance aliases and base addresses for Secure peripherals 
//2215
// const GPIOA: *mut GPIO_TypeDef = GPIOA_S;
// const GPIOA_BASE: u32 = GPIOA_BASE_S;

// const GPIOB: *mut GPIO_TypeDef = GPIOB_S;
// const GPIOB_BASE: u32 = GPIOB_BASE_S;ss

// const GPIOC: *mut GPIO_TypeDef = GPIOC_S;
// const GPIOC_BASE: u32 = GPIOC_BASE_S;

// const GPIOD: *mut GPIO_TypeDef = GPIOD_S;
// const GPIOD_BASE: u32 = GPIOD_BASE_S;

// const GPIOE: *mut GPIO_TypeDef = GPIOE_S;
// const GPIOE_BASE: u32 = GPIOE_BASE_S;

// const GPIOF: *mut GPIO_TypeDef = GPIOF_S;
// const GPIOF_BASE: u32 = GPIOF_BASE_S;

// const GPIOG: *mut GPIO_TypeDef = GPIOG_S;
// const GPIOG_BASE: u32 = GPIOG_BASE_S;

// const GPIOH: *mut GPIO_TypeDef = GPIOH_S;
// const GPIOH_BASE: u32 = GPIOH_BASE_S;

//Instance aliases and base addresses for Non secure peripherals 
//2629
const GPIOA: *mut GPIO_TypeDef= GPIOA_NS;
const GPIOA_BASE: u32 = GPIOA_BASE_NS;

const GPIOB: *mut GPIO_TypeDef = GPIOB_NS;
const GPIOB_BASE: u32 = GPIOB_BASE_NS;

const GPIOC: *mut GPIO_TypeDef= GPIOC_NS;
const GPIOC_BASE: u32 = GPIOC_BASE_NS;

const GPIOD: *mut GPIO_TypeDef = GPIOD_NS;
const GPIOD_BASE: u32 = GPIOD_BASE_NS;

const GPIOE: *mut GPIO_TypeDef = GPIOE_NS;
const GPIOE_BASE: u32 = GPIOE_BASE_NS;

const GPIOF: *mut GPIO_TypeDef = GPIOF_NS;
const GPIOF_BASE: u32 = GPIOF_BASE_NS;

const GPIOG: *mut GPIO_TypeDef = GPIOG_NS;
const GPIOG_BASE: u32 = GPIOG_BASE_NS;

const GPIOH: *mut GPIO_TypeDef = GPIOH_NS;
const GPIOH_BASE: u32 = GPIOH_BASE_NS;

//7981
//General Purpose IOs (GPIO)

//Bits definition for GPIO_MODER register
const GPIO_MODER_MODE0_POS: u32 = 0;
const GPIO_MODER_MODE0_Msk: u32 = 0x3 << GPIO_MODER_MODE0_POS;
const GPIO_MODER_MODE0: u32 = GPIO_MODER_MODE0_Msk;
const GPIO_MODER_MODE0_0: u32 = 0x1 << GPIO_MODER_MODE0_POS;
const GPIO_MODER_MODE0_1: u32 = 0x2 << GPIO_MODER_MODE0_POS;

const GPIO_MODER_MODE1_POS: u32 = 2;
const GPIO_MODER_MODE1_Msk: u32 = 0x3 << GPIO_MODER_MODE1_POS;
const GPIO_MODER_MODE1: u32 = GPIO_MODER_MODE1_Msk;
const GPIO_MODER_MODE1_0: u32 = 0x1 << GPIO_MODER_MODE1_POS;
const GPIO_MODER_MODE1_1: u32 = 0x2 << GPIO_MODER_MODE1_POS;

const GPIO_MODER_MODE2_POS: u32 = 4;
const GPIO_MODER_MODE2_Msk: u32 = 0x3 << GPIO_MODER_MODE2_POS;
const GPIO_MODER_MODE2: u32 = GPIO_MODER_MODE2_Msk;
const GPIO_MODER_MODE2_0: u32 = 0x1 << GPIO_MODER_MODE2_POS;
const GPIO_MODER_MODE2_1: u32 = 0x2 << GPIO_MODER_MODE2_POS;

const GPIO_MODER_MODE3_POS: u32 = 6;
const GPIO_MODER_MODE3_Msk: u32 = 0x3 << GPIO_MODER_MODE3_POS;
const GPIO_MODER_MODE3: u32 = GPIO_MODER_MODE3_Msk;
const GPIO_MODER_MODE3_0: u32 = 0x1 << GPIO_MODER_MODE3_POS;
const GPIO_MODER_MODE3_1: u32 = 0x2 << GPIO_MODER_MODE3_POS;

const GPIO_MODER_MODE4_POS: u32 = 8;
const GPIO_MODER_MODE4_Msk: u32 = 0x3 << GPIO_MODER_MODE4_POS;
const GPIO_MODER_MODE4: u32 = GPIO_MODER_MODE4_Msk;
const GPIO_MODER_MODE4_0: u32 = 0x1 << GPIO_MODER_MODE4_POS;
const GPIO_MODER_MODE4_1: u32 = 0x2 << GPIO_MODER_MODE4_POS;

const GPIO_MODER_MODE5_POS: u32 = 10;
const GPIO_MODER_MODE5_Msk: u32 = 0x3 << GPIO_MODER_MODE5_POS;
const GPIO_MODER_MODE5: u32 = GPIO_MODER_MODE5_Msk;
const GPIO_MODER_MODE5_0: u32 = 0x1 << GPIO_MODER_MODE5_POS;
const GPIO_MODER_MODE5_1: u32 = 0x2 << GPIO_MODER_MODE5_POS;

const GPIO_MODER_MODE6_POS: u32 = 12;
const GPIO_MODER_MODE6_Msk: u32 = 0x3 << GPIO_MODER_MODE6_POS;
const GPIO_MODER_MODE6: u32 = GPIO_MODER_MODE6_Msk;
const GPIO_MODER_MODE6_0: u32 = 0x1 << GPIO_MODER_MODE6_POS;
const GPIO_MODER_MODE6_1: u32 = 0x2 << GPIO_MODER_MODE6_POS;

const GPIO_MODER_MODE7_POS: u32 = 14;
const GPIO_MODER_MODE7_Msk: u32 = 0x3 << GPIO_MODER_MODE7_POS;
const GPIO_MODER_MODE7: u32 = GPIO_MODER_MODE7_Msk;
const GPIO_MODER_MODE7_0: u32 = 0x1 << GPIO_MODER_MODE7_POS;
const GPIO_MODER_MODE7_1: u32 = 0x2 << GPIO_MODER_MODE7_POS;

const GPIO_MODER_MODE8_POS: u32 = 16;
const GPIO_MODER_MODE8_Msk: u32 = 0x3 << GPIO_MODER_MODE8_POS;
const GPIO_MODER_MODE8: u32 = GPIO_MODER_MODE8_Msk;
const GPIO_MODER_MODE8_0: u32 = 0x1 << GPIO_MODER_MODE8_POS;
const GPIO_MODER_MODE8_1: u32 = 0x2 << GPIO_MODER_MODE8_POS;

const GPIO_MODER_MODE9_POS: u32 = 18;
const GPIO_MODER_MODE9_Msk: u32 = 0x3 << GPIO_MODER_MODE9_POS;
const GPIO_MODER_MODE9: u32 = GPIO_MODER_MODE9_Msk;
const GPIO_MODER_MODE9_0: u32 = 0x1 << GPIO_MODER_MODE9_POS;
const GPIO_MODER_MODE9_1: u32 = 0x2 << GPIO_MODER_MODE9_POS;

const GPIO_MODER_MODE10_POS: u32 = 20;
const GPIO_MODER_MODE10_Msk: u32 = 0x3 << GPIO_MODER_MODE10_POS;
const GPIO_MODER_MODE10: u32 = GPIO_MODER_MODE10_Msk;
const GPIO_MODER_MODE10_0: u32 = 0x1 << GPIO_MODER_MODE10_POS;
const GPIO_MODER_MODE10_1: u32 = 0x2 << GPIO_MODER_MODE10_POS;

const GPIO_MODER_MODE11_POS: u32 = 22;
const GPIO_MODER_MODE11_Msk: u32 = 0x3 << GPIO_MODER_MODE11_POS;
const GPIO_MODER_MODE11: u32 = GPIO_MODER_MODE11_Msk;
const GPIO_MODER_MODE11_0: u32 = 0x1 << GPIO_MODER_MODE11_POS;
const GPIO_MODER_MODE11_1: u32 = 0x2 << GPIO_MODER_MODE11_POS;

const GPIO_MODER_MODE12_POS: u32 = 24;
const GPIO_MODER_MODE12_Msk: u32 = 0x3 << GPIO_MODER_MODE12_POS;
const GPIO_MODER_MODE12: u32 = GPIO_MODER_MODE12_Msk;
const GPIO_MODER_MODE12_0: u32 = 0x1 << GPIO_MODER_MODE12_POS;
const GPIO_MODER_MODE12_1: u32 = 0x2 << GPIO_MODER_MODE12_POS;

const GPIO_MODER_MODE13_POS: u32 = 26;
const GPIO_MODER_MODE13_Msk: u32 = 0x3 << GPIO_MODER_MODE13_POS;
const GPIO_MODER_MODE13: u32 = GPIO_MODER_MODE13_Msk;
const GPIO_MODER_MODE13_0: u32 = 0x1 << GPIO_MODER_MODE13_POS;
const GPIO_MODER_MODE13_1: u32 = 0x2 << GPIO_MODER_MODE13_POS;

const GPIO_MODER_MODE14_POS: u32 = 28;
const GPIO_MODER_MODE14_Msk: u32 = 0x3 << GPIO_MODER_MODE14_POS;
const GPIO_MODER_MODE14: u32 = GPIO_MODER_MODE14_Msk;
const GPIO_MODER_MODE14_0: u32 = 0x1 << GPIO_MODER_MODE14_POS;
const GPIO_MODER_MODE14_1: u32 = 0x2 << GPIO_MODER_MODE14_POS;

const GPIO_MODER_MODE15_POS: u32 = 30;
const GPIO_MODER_MODE15_Msk: u32 = 0x3 << GPIO_MODER_MODE15_POS;
const GPIO_MODER_MODE15: u32 = GPIO_MODER_MODE15_Msk;
const GPIO_MODER_MODE15_0: u32 = 0x1 << GPIO_MODER_MODE15_POS;
const GPIO_MODER_MODE15_1: u32 = 0x2 << GPIO_MODER_MODE15_POS;

//8067
//Bits definition for GPIO_OTYPER register
const GPIO_OTYPER_OT0_Pos: u32 = 0;
const GPIO_OTYPER_OT0_Msk: u32 = 0x1 << GPIO_OTYPER_OT0_Pos;
const GPIO_OTYPER_OT0: u32 = GPIO_OTYPER_OT0_Msk;
const GPIO_OTYPER_OT1_Pos: u32 = 1;
const GPIO_OTYPER_OT1_Msk: u32 = 0x1 << GPIO_OTYPER_OT1_Pos;
const GPIO_OTYPER_OT1: u32 = GPIO_OTYPER_OT1_Msk;
const GPIO_OTYPER_OT2_Pos: u32 = 2;
const GPIO_OTYPER_OT2_Msk: u32 = 0x1 << GPIO_OTYPER_OT2_Pos;
const GPIO_OTYPER_OT2: u32 = GPIO_OTYPER_OT2_Msk;
const GPIO_OTYPER_OT3_Pos: u32 = 3;
const GPIO_OTYPER_OT3_Msk: u32 = 0x1 << GPIO_OTYPER_OT3_Pos;
const GPIO_OTYPER_OT3: u32 = GPIO_OTYPER_OT3_Msk;
const GPIO_OTYPER_OT4_Pos: u32 = 4;
const GPIO_OTYPER_OT4_Msk: u32 = 0x1 << GPIO_OTYPER_OT4_Pos;
const GPIO_OTYPER_OT4: u32 = GPIO_OTYPER_OT4_Msk;
const GPIO_OTYPER_OT5_Pos: u32 = 5;
const GPIO_OTYPER_OT5_Msk: u32 = 0x1 << GPIO_OTYPER_OT5_Pos;
const GPIO_OTYPER_OT5: u32 = GPIO_OTYPER_OT5_Msk;
const GPIO_OTYPER_OT6_Pos: u32 = 6;
const GPIO_OTYPER_OT6_Msk: u32 = 0x1 << GPIO_OTYPER_OT6_Pos;
const GPIO_OTYPER_OT6: u32 = GPIO_OTYPER_OT6_Msk;
const GPIO_OTYPER_OT7_Pos: u32 = 7;
const GPIO_OTYPER_OT7_Msk: u32 = 0x1 << GPIO_OTYPER_OT7_Pos;
const GPIO_OTYPER_OT7: u32 = GPIO_OTYPER_OT7_Msk;
const GPIO_OTYPER_OT8_Pos: u32 = 8;
const GPIO_OTYPER_OT8_Msk: u32 = 0x1 << GPIO_OTYPER_OT8_Pos;
const GPIO_OTYPER_OT8: u32 = GPIO_OTYPER_OT8_Msk;
const GPIO_OTYPER_OT9_Pos: u32 = 9;
const GPIO_OTYPER_OT9_Msk: u32 = 0x1 << GPIO_OTYPER_OT9_Pos;
const GPIO_OTYPER_OT9: u32 = GPIO_OTYPER_OT9_Msk;
const GPIO_OTYPER_OT10_Pos: u32 = 10;
const GPIO_OTYPER_OT10_Msk: u32 = 0x1 << GPIO_OTYPER_OT10_Pos;
const GPIO_OTYPER_OT10: u32 = GPIO_OTYPER_OT10_Msk;
const GPIO_OTYPER_OT11_Pos: u32 = 11;
const GPIO_OTYPER_OT11_Msk: u32 = 0x1 << GPIO_OTYPER_OT11_Pos;
const GPIO_OTYPER_OT11: u32 = GPIO_OTYPER_OT11_Msk;
const GPIO_OTYPER_OT12_Pos: u32 = 12;
const GPIO_OTYPER_OT12_Msk: u32 = 0x1 << GPIO_OTYPER_OT12_Pos;
const GPIO_OTYPER_OT12: u32 = GPIO_OTYPER_OT12;
const GPIO_OTYPER_OT13_Pos: u32 = 13;
const GPIO_OTYPER_OT13_Msk: u32 = 0x1 << GPIO_OTYPER_OT13_Pos;
const GPIO_OTYPER_OT13: u32 = GPIO_OTYPER_OT13;
const GPIO_OTYPER_OT14_Pos: u32 = 14;
const GPIO_OTYPER_OT14_Msk: u32 = 0x1 << GPIO_OTYPER_OT14_Pos;
const GPIO_OTYPER_OT14: u32 = GPIO_OTYPER_OT14;
const GPIO_OTYPER_OT15_Pos: u32 = 15;
const GPIO_OTYPER_OT15_Msk: u32 = 0x1 << GPIO_OTYPER_OT15_Pos;
const GPIO_OTYPER_OT15: u32 = GPIO_OTYPER_OT15;

//8117
// Bits definition for GPIO_OSPEEDR register
const GPIO_OSPEEDR_OSPEED0_Pos: u32 = 0;
const GPIO_OSPEEDR_OSPEED0_Msk: u32 = 0x3 << GPIO_OSPEEDR_OSPEED0_Pos;
const GPIO_OSPEEDR_OSPEED0: u32 = GPIO_OSPEEDR_OSPEED0_Msk;
const GPIO_OSPEEDR_OSPEED0_0: u32 = 0x1 << GPIO_OSPEEDR_OSPEED0_Pos;
const GPIO_OSPEEDR_OSPEED0_1: u32 = 0x2 << GPIO_OSPEEDR_OSPEED0_Pos;

const GPIO_OSPEEDR_OSPEED1_Pos: u32 = 2;
const GPIO_OSPEEDR_OSPEED1_Msk: u32 = 0x3 << GPIO_OSPEEDR_OSPEED1_Pos;
const GPIO_OSPEEDR_OSPEED1: u32 = GPIO_OSPEEDR_OSPEED1_Msk;
const GPIO_OSPEEDR_OSPEED1_0: u32 = 0x1 << GPIO_OSPEEDR_OSPEED1_Pos;
const GPIO_OSPEEDR_OSPEED1_1: u32 = 0x2 << GPIO_OSPEEDR_OSPEED1_Pos;

const GPIO_OSPEEDR_OSPEED2_Pos: u32 = 4;
const GPIO_OSPEEDR_OSPEED2_Msk: u32 = 0x3 << GPIO_OSPEEDR_OSPEED2_Pos;
const GPIO_OSPEEDR_OSPEED2: u32 = GPIO_OSPEEDR_OSPEED2_Msk;
const GPIO_OSPEEDR_OSPEED2_0: u32 = 0x1 << GPIO_OSPEEDR_OSPEED2_Pos;
const GPIO_OSPEEDR_OSPEED2_1: u32 = 0x2 << GPIO_OSPEEDR_OSPEED2_Pos;

const GPIO_OSPEEDR_OSPEED3_Pos: u32 = 6;
const GPIO_OSPEEDR_OSPEED3_Msk: u32 = 0x3 << GPIO_OSPEEDR_OSPEED3_Pos;
const GPIO_OSPEEDR_OSPEED3: u32 = GPIO_OSPEEDR_OSPEED3_Msk;
const GPIO_OSPEEDR_OSPEED3_0: u32 = 0x1 << GPIO_OSPEEDR_OSPEED3_Pos;
const GPIO_OSPEEDR_OSPEED3_1: u32 = 0x2 << GPIO_OSPEEDR_OSPEED3_Pos;

const GPIO_OSPEEDR_OSPEED4_Pos: u32 = 8;
const GPIO_OSPEEDR_OSPEED4_Msk: u32 = 0x3 << GPIO_OSPEEDR_OSPEED4_Pos;
const GPIO_OSPEEDR_OSPEED4: u32 = GPIO_OSPEEDR_OSPEED4_Msk;
const GPIO_OSPEEDR_OSPEED4_0: u32 = 0x1 << GPIO_OSPEEDR_OSPEED4_Pos;
const GPIO_OSPEEDR_OSPEED4_1: u32 = 0x2 << GPIO_OSPEEDR_OSPEED4_Pos;

const GPIO_OSPEEDR_OSPEED5_Pos: u32 = 10;
const GPIO_OSPEEDR_OSPEED5_Msk: u32 = 0x3 << GPIO_OSPEEDR_OSPEED5_Pos;
const GPIO_OSPEEDR_OSPEED5: u32 = GPIO_OSPEEDR_OSPEED5_Msk;
const GPIO_OSPEEDR_OSPEED5_0: u32 = 0x1 << GPIO_OSPEEDR_OSPEED5_Pos;
const GPIO_OSPEEDR_OSPEED5_1: u32 = 0x2 << GPIO_OSPEEDR_OSPEED5_Pos;

const GPIO_OSPEEDR_OSPEED6_Pos: u32 = 12;
const GPIO_OSPEEDR_OSPEED6_Msk: u32 = 0x3 << GPIO_OSPEEDR_OSPEED6_Pos;
const GPIO_OSPEEDR_OSPEED6: u32 = GPIO_OSPEEDR_OSPEED6_Msk;
const GPIO_OSPEEDR_OSPEED6_0: u32 = 0x1 << GPIO_OSPEEDR_OSPEED6_Pos;
const GPIO_OSPEEDR_OSPEED6_1: u32 = 0x2 << GPIO_OSPEEDR_OSPEED6_Pos;

const GPIO_OSPEEDR_OSPEED7_Pos: u32 = 14;
const GPIO_OSPEEDR_OSPEED7_Msk: u32 = 0x3 << GPIO_OSPEEDR_OSPEED7_Pos;
const GPIO_OSPEEDR_OSPEED7: u32 = GPIO_OSPEEDR_OSPEED7_Msk;
const GPIO_OSPEEDR_OSPEED7_0: u32 = 0x1 << GPIO_OSPEEDR_OSPEED7_Pos;
const GPIO_OSPEEDR_OSPEED7_1: u32 = 0x2 << GPIO_OSPEEDR_OSPEED7_Pos;

const GPIO_OSPEEDR_OSPEED8_Pos: u32 = 16;
const GPIO_OSPEEDR_OSPEED8_Msk: u32 = 0x3 << GPIO_OSPEEDR_OSPEED8_Pos;
const GPIO_OSPEEDR_OSPEED8: u32 = GPIO_OSPEEDR_OSPEED8_Msk;
const GPIO_OSPEEDR_OSPEED8_0: u32 = 0x1 << GPIO_OSPEEDR_OSPEED8_Pos;
const GPIO_OSPEEDR_OSPEED8_1: u32 = 0x2 << GPIO_OSPEEDR_OSPEED8_Pos;

const GPIO_OSPEEDR_OSPEED9_Pos: u32 = 18;
const GPIO_OSPEEDR_OSPEED9_Msk: u32 = 0x3 << GPIO_OSPEEDR_OSPEED9_Pos;
const GPIO_OSPEEDR_OSPEED9: u32 = GPIO_OSPEEDR_OSPEED9_Msk;
const GPIO_OSPEEDR_OSPEED9_0: u32 = 0x1 << GPIO_OSPEEDR_OSPEED9_Pos;
const GPIO_OSPEEDR_OSPEED9_1: u32 = 0x2 << GPIO_OSPEEDR_OSPEED9_Pos;

const GPIO_OSPEEDR_OSPEED10_Pos: u32 = 20;
const GPIO_OSPEEDR_OSPEED10_Msk: u32 = 0x3 << GPIO_OSPEEDR_OSPEED10_Pos;
const GPIO_OSPEEDR_OSPEED10: u32 = GPIO_OSPEEDR_OSPEED10_Msk;
const GPIO_OSPEEDR_OSPEED10_0: u32 = 0x1 << GPIO_OSPEEDR_OSPEED10_Pos;
const GPIO_OSPEEDR_OSPEED10_1: u32 = 0x2 << GPIO_OSPEEDR_OSPEED10_Pos;

const GPIO_OSPEEDR_OSPEED11_Pos: u32 = 22;
const GPIO_OSPEEDR_OSPEED11_Msk: u32 = 0x3 << GPIO_OSPEEDR_OSPEED11_Pos;
const GPIO_OSPEEDR_OSPEED11: u32 = GPIO_OSPEEDR_OSPEED11_Msk;
const GPIO_OSPEEDR_OSPEED11_0: u32 = 0x1 << GPIO_OSPEEDR_OSPEED11_Pos;
const GPIO_OSPEEDR_OSPEED11_1: u32 = 0x2 << GPIO_OSPEEDR_OSPEED11_Pos;

const GPIO_OSPEEDR_OSPEED12_Pos: u32 = 24;
const GPIO_OSPEEDR_OSPEED12_Msk: u32 = 0x3 << GPIO_OSPEEDR_OSPEED12_Pos;
const GPIO_OSPEEDR_OSPEED12: u32 = GPIO_OSPEEDR_OSPEED12_Msk;
const GPIO_OSPEEDR_OSPEED12_0: u32 = 0x1 << GPIO_OSPEEDR_OSPEED12_Pos;
const GPIO_OSPEEDR_OSPEED12_1: u32 = 0x2 << GPIO_OSPEEDR_OSPEED12_Pos;

const GPIO_OSPEEDR_OSPEED13_Pos: u32 = 26;
const GPIO_OSPEEDR_OSPEED13_Msk: u32 = 0x3 << GPIO_OSPEEDR_OSPEED13_Pos;
const GPIO_OSPEEDR_OSPEED13: u32 = GPIO_OSPEEDR_OSPEED13_Msk;
const GPIO_OSPEEDR_OSPEED13_0: u32 = 0x1 << GPIO_OSPEEDR_OSPEED13_Pos;
const GPIO_OSPEEDR_OSPEED13_1: u32 = 0x2 << GPIO_OSPEEDR_OSPEED13_Pos;

const GPIO_OSPEEDR_OSPEED14_Pos: u32 = 28;
const GPIO_OSPEEDR_OSPEED14_Msk: u32 = 0x3 << GPIO_OSPEEDR_OSPEED14_Pos;
const GPIO_OSPEEDR_OSPEED14: u32 = GPIO_OSPEEDR_OSPEED14_Msk;
const GPIO_OSPEEDR_OSPEED14_0: u32 = 0x1 << GPIO_OSPEEDR_OSPEED14_Pos;
const GPIO_OSPEEDR_OSPEED14_1: u32 = 0x2 << GPIO_OSPEEDR_OSPEED14_Pos;

const GPIO_OSPEEDR_OSPEED15_Pos: u32 = 30;
const GPIO_OSPEEDR_OSPEED15_Msk: u32 = 0x3 << GPIO_OSPEEDR_OSPEED15_Pos;
const GPIO_OSPEEDR_OSPEED15: u32 = GPIO_OSPEEDR_OSPEED15_Msk;
const GPIO_OSPEEDR_OSPEED15_0: u32 = 0x1 << GPIO_OSPEEDR_OSPEED15_Pos;
const GPIO_OSPEEDR_OSPEED15_1: u32 = 0x2 << GPIO_OSPEEDR_OSPEED15_Pos;

//8200
//Bits definition for GPIO_PUPDR register
const GPIO_PUPDR_PUPD0_Pos: u32 = 0;
const GPIO_PUPDR_PUPD0_Msk: u32 = 0x3 << GPIO_PUPDR_PUPD0_Pos;
const GPIO_PUPDR_PUPD0: u32 = GPIO_PUPDR_PUPD0_Msk;
const GPIO_PUPDR_PUPD0_0: u32 = 0x1 << GPIO_PUPDR_PUPD0_Pos;
const GPIO_PUPDR_PUPD0_1: u32 = 0x2 << GPIO_PUPDR_PUPD0_Pos;

const GPIO_PUPDR_PUPD1_Pos: u32 = 2;
const GPIO_PUPDR_PUPD1_Msk: u32 = 0x3 << GPIO_PUPDR_PUPD1_Pos;
const GPIO_PUPDR_PUPD1: u32 = GPIO_PUPDR_PUPD1_Msk;
const GPIO_PUPDR_PUPD1_0: u32 = 0x1 << GPIO_PUPDR_PUPD1_Pos;
const GPIO_PUPDR_PUPD1_1: u32 = 0x2 << GPIO_PUPDR_PUPD1_Pos;

const GPIO_PUPDR_PUPD2_Pos: u32 = 4;
const GPIO_PUPDR_PUPD2_Msk: u32 = 0x3 << GPIO_PUPDR_PUPD2_Pos;
const GPIO_PUPDR_PUPD2: u32 = GPIO_PUPDR_PUPD2_Msk;
const GPIO_PUPDR_PUPD2_0: u32 = 0x1 << GPIO_PUPDR_PUPD2_Pos;
const GPIO_PUPDR_PUPD2_1: u32 = 0x2 << GPIO_PUPDR_PUPD2_Pos;

const GPIO_PUPDR_PUPD3_Pos: u32 = 6;
const GPIO_PUPDR_PUPD3_Msk: u32 = 0x3 << GPIO_PUPDR_PUPD3_Pos;
const GPIO_PUPDR_PUPD3: u32 = GPIO_PUPDR_PUPD3_Msk;
const GPIO_PUPDR_PUPD3_0: u32 = 0x1 << GPIO_PUPDR_PUPD3_Pos;
const GPIO_PUPDR_PUPD3_1: u32 = 0x2 << GPIO_PUPDR_PUPD3_Pos;

const GPIO_PUPDR_PUPD4_Pos: u32 = 8;
const GPIO_PUPDR_PUPD4_Msk: u32 = 0x3 << GPIO_PUPDR_PUPD4_Pos;
const GPIO_PUPDR_PUPD4: u32 = GPIO_PUPDR_PUPD4_Msk;
const GPIO_PUPDR_PUPD4_0: u32 = 0x1 << GPIO_PUPDR_PUPD4_Pos;
const GPIO_PUPDR_PUPD4_1: u32 = 0x2 << GPIO_PUPDR_PUPD4_Pos;

const GPIO_PUPDR_PUPD5_Pos: u32 = 10;
const GPIO_PUPDR_PUPD5_Msk: u32 = 0x3 << GPIO_PUPDR_PUPD5_Pos;
const GPIO_PUPDR_PUPD5: u32 = GPIO_PUPDR_PUPD5_Msk;
const GPIO_PUPDR_PUPD5_0: u32 = 0x1 << GPIO_PUPDR_PUPD5_Pos;
const GPIO_PUPDR_PUPD5_1: u32 = 0x2 << GPIO_PUPDR_PUPD5_Pos;

const GPIO_PUPDR_PUPD6_Pos: u32 = 12;
const GPIO_PUPDR_PUPD6_Msk: u32 = 0x3 << GPIO_PUPDR_PUPD6_Pos;
const GPIO_PUPDR_PUPD6: u32 = GPIO_PUPDR_PUPD6_Msk;
const GPIO_PUPDR_PUPD6_0: u32 = 0x1 << GPIO_PUPDR_PUPD6_Pos;
const GPIO_PUPDR_PUPD6_1: u32 = 0x2 << GPIO_PUPDR_PUPD6_Pos;

const GPIO_PUPDR_PUPD7_Pos: u32 = 14;
const GPIO_PUPDR_PUPD7_Msk: u32 = 0x3 << GPIO_PUPDR_PUPD7_Pos;
const GPIO_PUPDR_PUPD7: u32 = GPIO_PUPDR_PUPD7_Msk;
const GPIO_PUPDR_PUPD7_0: u32 = 0x1 << GPIO_PUPDR_PUPD7_Pos;
const GPIO_PUPDR_PUPD7_1: u32 = 0x2 << GPIO_PUPDR_PUPD7_Pos;

const GPIO_PUPDR_PUPD8_Pos: u32 = 16;
const GPIO_PUPDR_PUPD8_Msk: u32 = 0x3 << GPIO_PUPDR_PUPD8_Pos;
const GPIO_PUPDR_PUPD8: u32 = GPIO_PUPDR_PUPD8_Msk;
const GPIO_PUPDR_PUPD8_0: u32 = 0x1 << GPIO_PUPDR_PUPD8_Pos;
const GPIO_PUPDR_PUPD8_1: u32 = 0x2 << GPIO_PUPDR_PUPD8_Pos;

const GPIO_PUPDR_PUPD9_Pos: u32 = 18;
const GPIO_PUPDR_PUPD9_Msk: u32 = 0x3 << GPIO_PUPDR_PUPD9_Pos;
const GPIO_PUPDR_PUPD9: u32 = GPIO_PUPDR_PUPD9_Msk;
const GPIO_PUPDR_PUPD9_0: u32 = 0x1 << GPIO_PUPDR_PUPD9_Pos;
const GPIO_PUPDR_PUPD9_1: u32 = 0x2 << GPIO_PUPDR_PUPD9_Pos;

const GPIO_PUPDR_PUPD10_Pos: u32 = 20;
const GPIO_PUPDR_PUPD10_Msk: u32 = 0x3 << GPIO_PUPDR_PUPD10_Pos;
const GPIO_PUPDR_PUPD10: u32 = GPIO_PUPDR_PUPD10_Msk;
const GPIO_PUPDR_PUPD10_0: u32 = 0x1 << GPIO_PUPDR_PUPD10_Pos;
const GPIO_PUPDR_PUPD10_1: u32 = 0x2 << GPIO_PUPDR_PUPD10_Pos;

const GPIO_PUPDR_PUPD11_Pos: u32 = 22;
const GPIO_PUPDR_PUPD11_Msk: u32 = 0x3 << GPIO_PUPDR_PUPD11_Pos;
const GPIO_PUPDR_PUPD11: u32 = GPIO_PUPDR_PUPD11_Msk;
const GPIO_PUPDR_PUPD11_0: u32 = 0x1 << GPIO_PUPDR_PUPD11_Pos;
const GPIO_PUPDR_PUPD11_1: u32 = 0x2 << GPIO_PUPDR_PUPD11_Pos;

const GPIO_PUPDR_PUPD12_Pos: u32 = 24;
const GPIO_PUPDR_PUPD12_Msk: u32 = 0x3 << GPIO_PUPDR_PUPD12_Pos;
const GPIO_PUPDR_PUPD12: u32 = GPIO_PUPDR_PUPD12_Msk;
const GPIO_PUPDR_PUPD12_0: u32 = 0x1 << GPIO_PUPDR_PUPD12_Pos;
const GPIO_PUPDR_PUPD12_1: u32 = 0x2 << GPIO_PUPDR_PUPD12_Pos;

const GPIO_PUPDR_PUPD13_Pos: u32 = 26;
const GPIO_PUPDR_PUPD13_Msk: u32 = 0x3 << GPIO_PUPDR_PUPD13_Pos;
const GPIO_PUPDR_PUPD13: u32 = GPIO_PUPDR_PUPD13_Msk;
const GPIO_PUPDR_PUPD13_0: u32 = 0x1 << GPIO_PUPDR_PUPD13_Pos;
const GPIO_PUPDR_PUPD13_1: u32 = 0x2 << GPIO_PUPDR_PUPD13_Pos;

const GPIO_PUPDR_PUPD14_Pos: u32 = 28;
const GPIO_PUPDR_PUPD14_Msk: u32 = 0x3 << GPIO_PUPDR_PUPD14_Pos;
const GPIO_PUPDR_PUPD14: u32 = GPIO_PUPDR_PUPD14_Msk;
const GPIO_PUPDR_PUPD14_0: u32 = 0x1 << GPIO_PUPDR_PUPD14_Pos;
const GPIO_PUPDR_PUPD14_1: u32 = 0x2 << GPIO_PUPDR_PUPD14_Pos;

const GPIO_PUPDR_PUPD15_Pos: u32 = 30;
const GPIO_PUPDR_PUPD15_Msk: u32 = 0x3 << GPIO_PUPDR_PUPD15_Pos;
const GPIO_PUPDR_PUPD15: u32 = GPIO_PUPDR_PUPD15_Msk;
const GPIO_PUPDR_PUPD15_0: u32 = 0x1 << GPIO_PUPDR_PUPD15_Pos;
const GPIO_PUPDR_PUPD15_1: u32 = 0x2 << GPIO_PUPDR_PUPD15_Pos;

//8331
//Bits definition for GPIO_ODR register
const GPIO_ODR_OD0_Pos: u32 = 0;
const GPIO_ODR_OD0_Msk: u32 = 0x1 << GPIO_ODR_OD0_Pos;
const GPIO_ODR_OD0: u32 = GPIO_ODR_OD0_Msk;

const GPIO_ODR_OD1_Pos: u32 = 1;
const GPIO_ODR_OD1_Msk: u32 = 0x1 << GPIO_ODR_OD1_Pos;
const GPIO_ODR_OD1: u32 = GPIO_ODR_OD1_Msk;

const GPIO_ODR_OD2_Pos: u32 = 2;
const GPIO_ODR_OD2_Msk: u32 = 0x1 << GPIO_ODR_OD2_Pos;
const GPIO_ODR_OD2: u32 = GPIO_ODR_OD2_Msk;

const GPIO_ODR_OD3_Pos: u32 = 3;
const GPIO_ODR_OD3_Msk: u32 = 0x1 << GPIO_ODR_OD3_Pos;
const GPIO_ODR_OD3: u32 = GPIO_ODR_OD3_Msk;

const GPIO_ODR_OD4_Pos: u32 = 4;
const GPIO_ODR_OD4_Msk: u32 = 0x1 << GPIO_ODR_OD4_Pos;
const GPIO_ODR_OD4: u32 = GPIO_ODR_OD4_Msk;

const GPIO_ODR_OD5_Pos: u32 = 5;
const GPIO_ODR_OD5_Msk: u32 = 0x1 << GPIO_ODR_OD5_Pos;
const GPIO_ODR_OD5: u32 = GPIO_ODR_OD5_Msk;

const GPIO_ODR_OD6_Pos: u32 = 6;
const GPIO_ODR_OD6_Msk: u32 = 0x1 << GPIO_ODR_OD6_Pos;
const GPIO_ODR_OD6: u32 = GPIO_ODR_OD6_Msk;

const GPIO_ODR_OD7_Pos: u32 = 7;
const GPIO_ODR_OD7_Msk: u32 = 0x1 << GPIO_ODR_OD7_Pos;
const GPIO_ODR_OD7: u32 = GPIO_ODR_OD7_Msk;

const GPIO_ODR_OD8_Pos: u32 = 8;
const GPIO_ODR_OD8_Msk: u32 = 0x1 << GPIO_ODR_OD8_Pos;
const GPIO_ODR_OD8: u32 = GPIO_ODR_OD8_Msk;

const GPIO_ODR_OD9_Pos: u32 = 9;
const GPIO_ODR_OD9_Msk: u32 = 0x1 << GPIO_ODR_OD9_Pos;
const GPIO_ODR_OD9: u32 = GPIO_ODR_OD9_Msk;

const GPIO_ODR_OD10_Pos: u32 = 10;
const GPIO_ODR_OD10_Msk: u32 = 0x1 << GPIO_ODR_OD10_Pos;
const GPIO_ODR_OD10: u32 = GPIO_ODR_OD10_Msk;

const GPIO_ODR_OD11_Pos: u32 = 11;
const GPIO_ODR_OD11_Msk: u32 = 0x1 << GPIO_ODR_OD11_Pos;
const GPIO_ODR_OD11: u32 = GPIO_ODR_OD11_Msk;

const GPIO_ODR_OD12_Pos: u32 = 12;
const GPIO_ODR_OD12_Msk: u32 = 0x1 << GPIO_ODR_OD12_Pos;
const GPIO_ODR_OD12: u32 = GPIO_ODR_OD12_Msk;

const GPIO_ODR_OD13_Pos: u32 = 13;
const GPIO_ODR_OD13_Msk: u32 = 0x1 << GPIO_ODR_OD13_Pos;
const GPIO_ODR_OD13: u32 = GPIO_ODR_OD13_Msk;

const GPIO_ODR_OD14_Pos: u32 = 14;
const GPIO_ODR_OD14_Msk: u32 = 0x1 << GPIO_ODR_OD14_Pos;
const GPIO_ODR_OD14: u32 = GPIO_ODR_OD14_Msk;

const GPIO_ODR_OD15_Pos: u32 = 15;
const GPIO_ODR_OD15_Msk: u32 = 0x1 << GPIO_ODR_OD15_Pos;
const GPIO_ODR_OD15: u32 = GPIO_ODR_OD15_Msk;

// Bits definition for GPIO_BSRR register
//8381

const GPIO_BSRR_BS0_Pos: u32 = 0;
const GPIO_BSRR_BS0_Msk  : u32 = 0x1 << GPIO_BSRR_BS0_Pos;
const GPIO_BSRR_BS0: u32 = GPIO_BSRR_BS0_Msk;

const GPIO_BSRR_BS1_Pos: u32 = 1;
const GPIO_BSRR_BS1_Msk  : u32 = 0x1 << GPIO_BSRR_BS1_Pos;
const GPIO_BSRR_BS1: u32 = GPIO_BSRR_BS1_Msk;

const GPIO_BSRR_BS2_Pos: u32 = 2;
const GPIO_BSRR_BS2_Msk  : u32 = 0x1 << GPIO_BSRR_BS2_Pos;
const GPIO_BSRR_BS2: u32 = GPIO_BSRR_BS2_Msk;

const GPIO_BSRR_BS3_Pos: u32 = 3;
const GPIO_BSRR_BS3_Msk  : u32 = 0x1 << GPIO_BSRR_BS3_Pos;
const GPIO_BSRR_BS3: u32 = GPIO_BSRR_BS3_Msk;

const GPIO_BSRR_BS4_Pos: u32 = 4;
const GPIO_BSRR_BS4_Msk  : u32 = 0x1 << GPIO_BSRR_BS4_Pos;
const GPIO_BSRR_BS4: u32 = GPIO_BSRR_BS4_Msk;

const GPIO_BSRR_BS5_Pos: u32 = 5;
const GPIO_BSRR_BS5_Msk  : u32 = 0x1 << GPIO_BSRR_BS5_Pos;
const GPIO_BSRR_BS5: u32 = GPIO_BSRR_BS5_Msk;

const GPIO_BSRR_BS6_Pos: u32 = 6;
const GPIO_BSRR_BS6_Msk  : u32 = 0x1 << GPIO_BSRR_BS6_Pos;
const GPIO_BSRR_BS6: u32 = GPIO_BSRR_BS6_Msk;

const GPIO_BSRR_BS7_Pos: u32 = 7;
const GPIO_BSRR_BS7_Msk  : u32 = 0x1 << GPIO_BSRR_BS7_Pos;
const GPIO_BSRR_BS7: u32 = GPIO_BSRR_BS7_Msk;

const GPIO_BSRR_BS8_Pos: u32 = 8;
const GPIO_BSRR_BS8_Msk  : u32 = 0x1 << GPIO_BSRR_BS8_Pos;
const GPIO_BSRR_BS8: u32 = GPIO_BSRR_BS8_Msk;

const GPIO_BSRR_BS9_Pos: u32 = 9;
const GPIO_BSRR_BS9_Msk  : u32 = 0x1 << GPIO_BSRR_BS9_Pos;
const GPIO_BSRR_BS9: u32 = GPIO_BSRR_BS9_Msk;

const GPIO_BSRR_BS10_Pos: u32 = 10;
const GPIO_BSRR_BS10_Msk  : u32 = 0x1 << GPIO_BSRR_BS10_Pos;
const GPIO_BSRR_BS10: u32 = GPIO_BSRR_BS10_Msk;

const GPIO_BSRR_BS11_Pos: u32 = 11;
const GPIO_BSRR_BS11_Msk  : u32 = 0x1 << GPIO_BSRR_BS11_Pos;
const GPIO_BSRR_BS11: u32 = GPIO_BSRR_BS11_Msk;

const GPIO_BSRR_BS12_Pos: u32 = 12;
const GPIO_BSRR_BS12_Msk  : u32 = 0x1 << GPIO_BSRR_BS12_Pos;
const GPIO_BSRR_BS12: u32 = GPIO_BSRR_BS12_Msk;

const GPIO_BSRR_BS13_Pos: u32 = 13;
const GPIO_BSRR_BS13_Msk  : u32 = 0x1 << GPIO_BSRR_BS13_Pos;
const GPIO_BSRR_BS13: u32 = GPIO_BSRR_BS13_Msk;

const GPIO_BSRR_BS14_Pos: u32 = 14;
const GPIO_BSRR_BS14_Msk  : u32 = 0x1 << GPIO_BSRR_BS14_Pos;
const GPIO_BSRR_BS14: u32 = GPIO_BSRR_BS14_Msk;

const GPIO_BSRR_BS15_Pos: u32 = 15;
const GPIO_BSRR_BS15_Msk  : u32 = 0x1 << GPIO_BSRR_BS15_Pos;
const GPIO_BSRR_BS15: u32 = GPIO_BSRR_BS15_Msk;

//Bits definition for GPIO_BRR register
//8648

const GPIO_BRR_BR0_Pos: u32 = 0;
const GPIO_BRR_BR0_Msk  : u32 = 0x1 << GPIO_BRR_BR0_Pos;
const GPIO_BRR_BR0: u32 = GPIO_BRR_BR0_Msk;

const GPIO_BRR_BR1_Pos: u32 = 1;
const GPIO_BRR_BR1_Msk  : u32 = 0x1 << GPIO_BRR_BR1_Pos;
const GPIO_BRR_BR1: u32 = GPIO_BRR_BR1_Msk;

const GPIO_BRR_BR2_Pos: u32 = 2;
const GPIO_BRR_BR2_Msk  : u32 = 0x1 << GPIO_BRR_BR2_Pos;
const GPIO_BRR_BR2: u32 = GPIO_BRR_BR2_Msk;

const GPIO_BRR_BR3_Pos: u32 = 3;
const GPIO_BRR_BR3_Msk  : u32 = 0x1 << GPIO_BRR_BR3_Pos;
const GPIO_BRR_BR3: u32 = GPIO_BRR_BR3_Msk;

const GPIO_BRR_BR4_Pos: u32 = 4;
const GPIO_BRR_BR4_Msk  : u32 = 0x1 << GPIO_BRR_BR4_Pos;
const GPIO_BRR_BR4: u32 = GPIO_BRR_BR4_Msk;

const GPIO_BRR_BR5_Pos: u32 = 5;
const GPIO_BRR_BR5_Msk  : u32 = 0x1 << GPIO_BRR_BR5_Pos;
const GPIO_BRR_BR5: u32 = GPIO_BRR_BR5_Msk;

const GPIO_BRR_BR6_Pos: u32 = 6;
const GPIO_BRR_BR6_Msk  : u32 = 0x1 << GPIO_BRR_BR6_Pos;
const GPIO_BRR_BR6: u32 = GPIO_BRR_BR6_Msk;

const GPIO_BRR_BR7_Pos: u32 = 7;
const GPIO_BRR_BR7_Msk  : u32 = 0x1 << GPIO_BRR_BR7_Pos;
const GPIO_BRR_BR7: u32 = GPIO_BRR_BR7_Msk;

const GPIO_BRR_BR8_Pos: u32 = 8;
const GPIO_BRR_BR8_Msk  : u32 = 0x1 << GPIO_BRR_BR8_Pos;
const GPIO_BRR_BR8: u32 = GPIO_BRR_BR8_Msk;

const GPIO_BRR_BR9_Pos: u32 = 9;
const GPIO_BRR_BR9_Msk  : u32 = 0x1 << GPIO_BRR_BR9_Pos;
const GPIO_BRR_BR9: u32 = GPIO_BRR_BR9_Msk;

const GPIO_BRR_BR10_Pos: u32 = 10;
const GPIO_BRR_BR10_Msk  : u32 = 0x1 << GPIO_BRR_BR10_Pos;
const GPIO_BRR_BR10: u32 = GPIO_BRR_BR10_Msk;

const GPIO_BRR_BR11_Pos: u32 = 11;
const GPIO_BRR_BR11_Msk  : u32 = 0x1 << GPIO_BRR_BR11_Pos;
const GPIO_BRR_BR11: u32 = GPIO_BRR_BR11_Msk;

const GPIO_BRR_BR12_Pos: u32 = 12;
const GPIO_BRR_BR12_Msk  : u32 = 0x1 << GPIO_BRR_BR12_Pos;
const GPIO_BRR_BR12: u32 = GPIO_BRR_BR12_Msk;

const GPIO_BRR_BR13_Pos: u32 = 13;
const GPIO_BRR_BR13_Msk  : u32 = 0x1 << GPIO_BRR_BR13_Pos;
const GPIO_BRR_BR13: u32 = GPIO_BRR_BR13_Msk;

const GPIO_BRR_BR14_Pos: u32 = 14;
const GPIO_BRR_BR14_Msk  : u32 = 0x1 << GPIO_BRR_BR14_Pos;
const GPIO_BRR_BR14: u32 = GPIO_BRR_BR14_Msk;

const GPIO_BRR_BR15_Pos: u32 = 15;
const GPIO_BRR_BR15_Msk  : u32 = 0x1 << GPIO_BRR_BR15_Pos;
const GPIO_BRR_BR15: u32 = GPIO_BRR_BR15_Msk;

